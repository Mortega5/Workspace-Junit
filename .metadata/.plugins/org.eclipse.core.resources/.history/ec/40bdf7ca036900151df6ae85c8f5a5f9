package test;

import static org.junit.Assert.*;

import java.util.Arrays;
import java.util.Collection;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized.Parameters;

import sudoku.SudokuVerifier;

@RunWith(Parameterized.class)
public class SudokuVerifierTest {
	private String sudoku;
	private String result;
	
	public SudokuVerifierTest(String sudoku) {
		this.sudoku = sudoku;
	}
	
	@Parameters(name = "Test {index} : new SudokuVerifier({1}) = {0}")
	public static Collection<Object[]> myData() {
		String valid ="547916238193284675628753491359421786462578913871639524916847352735162849284395167";
		String invalid = "547916238193284675628753491359421786462578913871639524916847352735162849284395165";
		return Arrays.asList(new Object[][] {
				{valid, valid},
				{invalid, invalid},
				{input, input}});
	}
	5	4	7	9	1	6	2	3	8 1	9	3	2	8	4	6	7	5 6	2	8	7	5	3	4	9	1
	3	5	9	4	2	1	7	8	6
	4	6	2	5	7	8	9	1	3
	8	7	1	6	3	9	5	2	4
	9	1	6	8	4	7	3	5	2
	7	3	5	1	6	2	8	4	9
	2	8	4	3	9	5	1	6	7
	@Test
	public void crearUnNuevoSudoku() {
		String error = "Se intenta crear un sudoku, pero no se almacena el mismo que se quiere a√±adir";
		assertEquals(error, result, new SudokuVerifier(sudoku).getCandidateSolution());
	}
	
	@Test
	public

}
