package source;

import exceptios.ErrorEmptyCandidateSolution;
import exceptios.ErrorInvalidCandidateSolution;
import exceptios.ErrorInvalidNumber;

public class SudokuVerifier {

	private int[] parserCandidateSolution(String candidateSolution) throws ErrorInvalidCandidateSolution, ErrorEmptyCandidateSolution, ErrorInvalidNumber {
		int[] matrix = null;
		
		if (candidateSolution == null ) {
			throw new ErrorEmptyCandidateSolution();
		} else if (candidateSolution.length() != 81) {
			throw new ErrorInvalidCandidateSolution();
		}
		
		for (int i = 0; i < candidateSolution.length(); i++)  {
			int asciiCode = (int) candidateSolution.charAt(i); 
			if ( asciiCode < 49 || asciiCode > 57 ) {
				throw new ErrorInvalidNumber();
			} else {
				matrix[i] = Integer.parseInt(candidateSolution.charAt(i));
			}
		}
		
		return matrix;
	}
	public int validate(String candidateSolution) {
		// 0 esta correcto
		// 1 una celda contiene u nnumero no positivo de entre 1..9
		// 2 todos los digitos aparecen una vez en un sub celda
		// 3 los numeros aparecen una vez por fila
		// 4 los numeros aparecen una vez por columa
		
		return 0;
	}
}
